{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { logiarUsuario } from \"./../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SingIn = function SingIn(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    mail: \"\",\n    contraseña: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      log = _useState2[0],\n      setLog = _useState2[1];\n\n  var ChangeInput = function ChangeInput(e) {\n    setLog(_objectSpread(_objectSpread({}, log), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var obj = {\n      eMail: log.mail,\n      password: log.contraseña\n    };\n    dispatch(logiarUsuario(obj));\n    console.log(\"Estoy enviado\", obj);\n    setLog({\n      mail: \"\",\n      contraseña: \"\"\n    });\n  };\n\n  function navigate() {\n    navigation.navigate(\"singUp\");\n  }\n\n  return _jsxs(ScrollView, {\n    style: {\n      flex: 1,\n      backgroundColor: \"#ffffffff\"\n    },\n    showsVerticalScrollIndicator: false,\n    children: [_jsx(ImageBackground, {\n      source: require(\"./ruta.png\"),\n      style: {\n        height: Dimensions.get(\"window\").height / 2.5\n      },\n      children: _jsxs(View, {\n        style: styles.brandView,\n        children: [_jsx(Ionicons, {\n          name: \"location-sharp\",\n          style: {\n            color: \"#ffbe0b\",\n            fontSize: 100\n          }\n        }), _jsx(Text, {\n          style: styles.brandViewText,\n          children: \"LOGIEXPRESS\"\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.bottonView,\n      children: [_jsx(View, {\n        style: {\n          padding: 40,\n          display: \"flex\",\n          alignItems: \"center\"\n        },\n        children: _jsx(Text, {\n          style: {\n            color: \"#4632a1\",\n            fontSize: 34\n          },\n          children: \"Bienvenido\"\n        })\n      }), _jsxs(View, {\n        style: styles.FormView,\n        onChange: function onChange(e) {\n          return ChangeInput(e);\n        },\n        onSubmit: function onSubmit(e) {\n          return handleSubmit(e);\n        },\n        children: [_jsx(TextInput, {\n          value: log.mail,\n          onChangeText: function onChangeText(text) {\n            return setLog(_objectSpread(_objectSpread({}, log), {}, {\n              mail: text\n            }));\n          },\n          name: \"mail\",\n          placeholder: \"Direcci\\xF3n de Mail*\",\n          style: styles.TextInput\n        }), _jsx(TextInput, {\n          value: log.contraseña,\n          onChangeText: function onChangeText(text) {\n            return setLog(_objectSpread(_objectSpread({}, log), {}, {\n              contraseña: text\n            }));\n          },\n          name: \"contrase\\xF1a\",\n          placeholder: \"Contrase\\xF1a*\",\n          secureTextEntry: true,\n          style: styles.TextInput\n        }), _jsx(TouchableOpacity, {\n          style: styles.Button,\n          children: _jsx(Text, {\n            style: styles.ButtonText,\n            onPress: handleSubmit,\n            children: \"Iniciar Sesi\\xF3n\"\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.preg,\n        children: _jsx(Text, {\n          style: styles.pregunta,\n          children: \"No tienes una cuenta? \"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.TextButton,\n        onPress: navigate,\n        children: _jsx(Text, {\n          style: styles.SingUpText,\n          children: \"Registrate Ahora\"\n        })\n      }), _jsx(Button, {\n        title: \"Editar Perfil usuario\",\n        onPress: function onPress() {\n          return navigation.navigate(\"EditProfile\");\n        }\n      }), _jsx(Button, {\n        title: \"Editar Perfil Transportista\",\n        onPress: function onPress() {\n          return navigation.navigate(\"EditProfileCarrier\");\n        }\n      }), _jsx(Button, {\n        title: \"Completar perfil usuario\",\n        onPress: function onPress() {\n          return navigation.navigate(\"CompleteProfileUser\");\n        }\n      }), _jsx(Button, {\n        title: \"Completar perfil carrier\",\n        onPress: function onPress() {\n          return navigation.navigate(\"CompleteProfileCarrier\");\n        }\n      })]\n    })]\n  });\n};\n\nexport default SingIn;\nvar styles = StyleSheet.create({\n  brandView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  brandViewText: {\n    color: \"#ffbe0b\",\n    fontSize: 45,\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\"\n  },\n  bottonView: {\n    flex: 1.5,\n    backgroundColor: \"#ffffffff\",\n    bottom: 50,\n    borderTopStartRadius: 60,\n    borderTopEndRadius: 60\n  },\n  FormView: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: -10\n  },\n  TextInput: {\n    width: \"90%\",\n    borderWidth: 1,\n    borderColor: \"black\",\n    height: 52,\n    borderRadius: 10,\n    paddingLeft: 10,\n    marginTop: 20,\n    color: \"black\"\n  },\n  Button: {\n    width: \"90%\",\n    color: \"yellow\",\n    height: 52,\n    backgroundColor: \"black\",\n    borderRadius: 10,\n    marginTop: 20,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  ButtonText: {\n    fontWeight: \"bold\",\n    fontSize: 18,\n    color: \"white\"\n  },\n  SingUpText: {\n    color: \"#4632a1\",\n    fontSize: 20\n  },\n  TextButton: {\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: 10\n  },\n  preg: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  pregunta: {\n    color: \"red\"\n  }\n});","map":{"version":3,"sources":["C:/Users/admin/Desktop/LOGIEXPRESS/clientnative/Components/SingIn.js"],"names":["React","useState","Ionicons","logiarUsuario","useDispatch","SingIn","navigation","dispatch","mail","contraseña","log","setLog","ChangeInput","e","target","name","value","handleSubmit","preventDefault","obj","eMail","password","console","navigate","flex","backgroundColor","require","height","Dimensions","get","styles","brandView","color","fontSize","brandViewText","bottonView","padding","display","alignItems","FormView","text","TextInput","Button","ButtonText","preg","pregunta","TextButton","SingUpText","StyleSheet","create","justifyContent","fontWeight","textTransform","bottom","borderTopStartRadius","borderTopEndRadius","width","flexDirection","marginTop","borderWidth","borderColor","borderRadius","paddingLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport {\r\n  Text,\r\n  ScrollView,\r\n  ImageBackground,\r\n  Dimensions,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Button\r\n} from \"react-native\";\r\nimport { logiarUsuario } from \"./../actions/index\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst SingIn = ({ navigation }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [log, setLog] = useState({\r\n    mail: \"\",\r\n    contraseña: \"\",\r\n  });\r\n\r\n  const ChangeInput = (e) => {\r\n    setLog({\r\n      // y sino es  generos y platforms, directamente pongo lo que escribo en el input\r\n      ...log,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // en un objeto pongo lo que tengo en el estado inicial\r\n    const obj = {\r\n      eMail: log.mail,\r\n      password: log.contraseña,\r\n    };\r\n    dispatch(logiarUsuario(obj));\r\n    console.log(\"Estoy enviado\", obj);\r\n    setLog({\r\n      mail: \"\",\r\n      contraseña: \"\",\r\n    });\r\n  };\r\n\r\n  function navigate() {\r\n    navigation.navigate(\"singUp\");\r\n  }\r\n\r\n  return (\r\n    //Container Start\r\n    <ScrollView\r\n      style={{ flex: 1, backgroundColor: \"#ffffffff\" }}\r\n      showsVerticalScrollIndicator={false}\r\n    >\r\n      {/* Brand View */}\r\n      <ImageBackground\r\n        source={require(\"./ruta.png\")}\r\n        style={{\r\n          height: Dimensions.get(\"window\").height / 2.5,\r\n        }}\r\n      >\r\n        <View style={styles.brandView}>\r\n          <Ionicons\r\n            name=\"location-sharp\"\r\n            style={{ color: \"#ffbe0b\", fontSize: 100 }}\r\n          />\r\n          <Text style={styles.brandViewText}>LOGIEXPRESS</Text>\r\n        </View>\r\n      </ImageBackground>\r\n      {/* Botton View */}\r\n      <View style={styles.bottonView}>\r\n        {/* Welcome View */}\r\n        <View style={{ padding: 40, display: \"flex\", alignItems: \"center\" }}>\r\n          <Text style={{ color: \"#4632a1\", fontSize: 34 }}>Bienvenido</Text>\r\n        </View>\r\n        {/* inputs */}\r\n        <View\r\n          style={styles.FormView}\r\n          onChange={(e) => ChangeInput(e)}\r\n          onSubmit={(e) => handleSubmit(e)}\r\n        >\r\n          <TextInput\r\n            value={log.mail}\r\n            onChangeText={(text) => setLog({ ...log, mail: text })}\r\n            name=\"mail\"\r\n            placeholder=\"Dirección de Mail*\"\r\n            style={styles.TextInput}\r\n          ></TextInput>\r\n          <TextInput\r\n            value={log.contraseña}\r\n            onChangeText={(text) => setLog({ ...log, contraseña: text })}\r\n            name=\"contraseña\"\r\n            placeholder=\"Contraseña*\"\r\n            secureTextEntry={true}\r\n            style={styles.TextInput}\r\n          ></TextInput>\r\n          <TouchableOpacity style={styles.Button}>\r\n            <Text style={styles.ButtonText} onPress={handleSubmit}>\r\n              Iniciar Sesión\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n        <View style={styles.preg}>\r\n          <Text style={styles.pregunta}>No tienes una cuenta? </Text>\r\n        </View>\r\n\r\n        <TouchableOpacity style={styles.TextButton} onPress={navigate}>\r\n          <Text style={styles.SingUpText}>Registrate Ahora</Text>\r\n        </TouchableOpacity>\r\n        {/* BOTONES QUE USO PARA DIRIGIRME A MI PANTALLA */}\r\n        <Button\r\n          title=\"Editar Perfil usuario\"\r\n          onPress={() => navigation.navigate(\"EditProfile\")}\r\n        />\r\n        <Button\r\n          title=\"Editar Perfil Transportista\"\r\n          onPress={() => navigation.navigate(\"EditProfileCarrier\")}\r\n        />\r\n        <Button\r\n          title=\"Completar perfil usuario\"\r\n          onPress={() => navigation.navigate(\"CompleteProfileUser\")}\r\n        />\r\n         <Button\r\n          title=\"Completar perfil carrier\"\r\n          onPress={() => navigation.navigate(\"CompleteProfileCarrier\")}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n    // Container End\r\n  );\r\n};\r\n\r\nexport default SingIn;\r\n\r\nconst styles = StyleSheet.create({\r\n  brandView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  brandViewText: {\r\n    color: \"#ffbe0b\",\r\n    fontSize: 45,\r\n    fontWeight: \"bold\",\r\n    textTransform: \"uppercase\",\r\n    // justifyContent:'flex-start'\r\n  },\r\n  bottonView: {\r\n    flex: 1.5,\r\n    backgroundColor: \"#ffffffff\",\r\n    bottom: 50,\r\n    borderTopStartRadius: 60,\r\n    borderTopEndRadius: 60,\r\n  },\r\n  FormView: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    marginTop: -10,\r\n  },\r\n  TextInput: {\r\n    width: \"90%\",\r\n    borderWidth: 1,\r\n    borderColor: \"black\",\r\n    height: 52,\r\n    borderRadius: 10,\r\n    paddingLeft: 10,\r\n    marginTop: 20,\r\n    color: \"black\",\r\n  },\r\n  Button: {\r\n    width: \"90%\",\r\n    color: \"yellow\",\r\n    height: 52,\r\n    backgroundColor: \"black\",\r\n    borderRadius: 10,\r\n    marginTop: 20,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  ButtonText: {\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n    color: \"white\",\r\n  },\r\n  SingUpText: {\r\n    color: \"#4632a1\",\r\n    fontSize: 20,\r\n  },\r\n  TextButton: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  preg: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  pregunta: {\r\n    color: \"red\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}